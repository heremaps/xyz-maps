name: NPM Publish

on:
    push:
        branches:
            - "!*"
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+*"

env:
    yarn-network-timeout: 1000000

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"
            -   uses: actions/cache@v2
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-
            -   name: Setup Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '20'
                    registry-url: 'https://registry.npmjs.org'
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            -   name: Install dependencies
                run: yarn install --network-timeout ${{ env.yarn-network-timeout }}
            -   name: Build release
                run: yarn run build-release
            -   name: Get npm dist-tag
                id: get-dist-tag
                run: |
                    distTag=$(jq -r '.version | match(".*-([^.]*)").captures[0].string' package.json)
                    echo "::set-output name=dist-tag::${distTag:-latest}"
            -   name: npm publish
                run: lerna publish from-package --no-git-tag-version --yes --dist-tag ${{ steps.get-dist-tag.outputs.dist-tag }}
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
